local expectedUsernames = {
    "9595bors",
    "JTEUDRH",
    "Darkness_Insead",
    "ryftijmuiden",
    "man_konoko",
    "I3adDayz",
    "hanifgames9595",
    "kdoaksh123",
    "iddont_car4",
    "bloxfruit_salt1",
    "kleenabgiftzwer",
    "aboodnazmi77",
    "B25o60n99hZ97I",
    "mahmoud56878",
    ""
}

print(best)

function isWhitelisted()
    local localPlayer = game.Players.LocalPlayer  
    if localPlayer then
        local playerName = localPlayer.Name
        for _, expectedUsername in ipairs(expectedUsernames) do
            if playerName == expectedUsername then
                return true
            end
        end
    end
    return false
end


if isWhitelisted() then
    local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()


local droppedFolder = workspace:FindFirstChild("Dropped")
if not droppedFolder then
    droppedFolder = Instance.new("Folder")
    droppedFolder.Name = "Dropped"
    droppedFolder.Parent = workspace
end

local objectValueName = "Owner"
local player = game.Players.LocalPlayer
local itemLimit = 15

local Window = Fluent:CreateWindow({
    Title = "Duping GUI" .. Fluent.Version,
    SubTitle = "by xyzz",
    TabWidth = 130,
    Size = UDim2.fromOffset(490, 400),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl -- Used when there's no MinimizeKeybind
})

local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "" }),
}

local Input = Tabs.Main:AddInput("Input", {
    Title = "Item Name",
    Default = "",
    Placeholder = "Item Name",
    Numeric = false,
    Finished = false,
    Callback = function(arg)
        _G.C = arg
    end,
})

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")

local ToggleScript = false
local ItemName = ""

local function equipAllTools(player)
    local character = player.Character
    if character then
        for _, tool in pairs(player.Backpack:GetChildren()) do
            if tool:IsA("Tool") then
                tool.Parent = character
            end
        end
    end
end

local function performRemoteCall(itemName)
    local args = {
        [1] = itemName or "Item Here"
    }

    ReplicatedStorage:WaitForChild("RemoteEvents"):WaitForChild("Drop"):FireServer(unpack(args))
end

local function teleportParts(parts, targetCFrame)
    for _, part in pairs(parts) do
        if part and part:IsA("BasePart") then
            part.CFrame = targetCFrame
        end
    end
end

local function runScript()
    while ToggleScript do
        local localPlayer = Players.LocalPlayer
        if localPlayer then
            equipAllTools(localPlayer)
            performRemoteCall(ItemName)

            local targetCFrame = CFrame.new(
                147707.703, -88.4722672, 194.146698,
                0.967871785, 3.5008501e-08, 0.251444221,
                -6.04740169e-09, 1, -1.15951728e-07,
                -0.251444221, 1.1070582e-07, 0.967871785
            )

            local droppedItems = Workspace:FindFirstChild("Dropped")
            if droppedItems then
                for _, child in pairs(droppedItems:GetChildren()) do
                    if child and child:IsA("Model") then
                        local partsToTeleport = {}

                        for _, nestedPart in pairs(child:GetDescendants()) do
                            if nestedPart:IsA("BasePart") then
                                table.insert(partsToTeleport, nestedPart)
                            end
                        end

                        teleportParts(partsToTeleport, targetCFrame)
                    end
                end
            end
        end

        wait(0.0001)
    end
end

local ToggleeCollector = Tabs.Main:AddToggle("Dupe", { Title = "Dupe", Default = false })

ToggleeCollector:OnChanged(function()
    ToggleScript = ToggleeCollector.Value

    if ToggleScript then
        ItemName = _G.C or ""
        runScript()
    end
end)

ToggleeCollector:SetValue(false)


local ToggleCollector = Tabs.Main:AddToggle("Collector", { Title = "Collector", Default = false })

ToggleCollector:OnChanged(function()
    if ToggleCollector.Value then
        _G.banana = true

        while _G.banana do
            local args = {
                [1] = _G.C or ""
            }

            game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("Equip"):FireServer(unpack(args))
            wait(0.0001)
        end
    else
        _G.banana = false
    end
end)

ToggleCollector:SetValue(false)



local ToggleEnableInventory = Tabs.Main:AddToggle("EnableInventory", { Title = "Enable/Disable Inventory", Default = false })

ToggleEnableInventory:OnChanged(function()
    if ToggleEnableInventory.Value then
        game.StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, true)
    else
        game.StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, false)
    end
end)

ToggleEnableInventory:SetValue(false)

local Players = game:GetService("Players")
local CheckQuantityButton = Tabs.Main:AddButton({
    Title = "Check Amount",
    Callback = function()
        local itemName = _G.C or ""
        local localPlayer = Players.LocalPlayer
        if localPlayer and localPlayer.Items and localPlayer.Items[itemName] then
            local quantity = localPlayer.Items[itemName].Value
            game.StarterGui:SetCore("SendNotification", {
                Title = "Item Amount",
                Text = "You have " .. tostring(quantity) .. " " .. itemName,
                Duration = 5
            })
        else
            game.StarterGui:SetCore("SendNotification", {
                Title = "Item Quantity",
                Text = "No Item Found",
                Duration = 5
            })
        end
    end
})


SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

SaveManager:IgnoreThemeSettings()

Window:SelectTab(1)

Fluent:Notify({
    Title = "Duping GUI",
    Content = "by 1xyzz",
    Duration = 5
})

SaveManager:LoadAutoloadConfig()
print("by xyzz")

game.Players.localPlayer.XRay.Value = true
else

    local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

    Fluent:Notify({
        Title = "Duping GUI",
        Content = "buy the dupe, dm 1xyzz",
        Duration = 8
    })
end
